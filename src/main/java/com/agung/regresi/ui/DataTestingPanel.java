/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.agung.regresi.ui;

import com.agung.regresi.Main;
import com.agung.regresi.entity.Testing;
import com.agung.regresi.util.CSVTestingReader;
import com.agung.regresi.util.LookUtil;
import com.agung.regresi.util.TableUtil;
import java.io.File;
import java.io.FileNotFoundException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.AbstractTableModel;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author agung
 */
public class DataTestingPanel extends javax.swing.JInternalFrame {

    private List<Testing> listTestings;
    private static final Logger LOGGER = LoggerFactory.getLogger(DataTestingPanel.class);

    public DataTestingPanel() {
        initComponents();
        loadDataToTable();
        //btnClean.setEnabled(false);
        LookUtil.plasticLaf(jToolBar1);
        TableUtil.initColumn(tblDataTesting, jScrollPane1);
        loadDataToTable();
    }

    private void loadDataToTable() {
        listTestings = Main.getTestingDataRepository().getAllData();
        if (listTestings != null && !listTestings.isEmpty()) {
            tblDataTesting.setModel(new DataTestingTableModel(listTestings));
            TableUtil.initColumn(tblDataTesting, jScrollPane1);
        } else {
            tblDataTesting.setModel(new DataTestingTableModel(new ArrayList<>()));
            TableUtil.initColumn(tblDataTesting, jScrollPane1);
        }
    }

    private class DataTestingTableModel extends AbstractTableModel {

        private List<Testing> listTestings = new ArrayList<>();
        private String[] header = {"ID", "Nilai UAS"};

        public DataTestingTableModel(List<Testing> listTestings) {
            this.listTestings = listTestings;
        }

        @Override
        public int getRowCount() {
            return listTestings.size();
        }

        @Override
        public int getColumnCount() {
            return header.length;
        }

        @Override
        public String getColumnName(int column) {
            return header[column];
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Testing t = listTestings.get(rowIndex);
            switch (columnIndex) {
                case 0:
                    return t.getId();
                case 1:
                    return t.getNilaiUAS();
                default:
                    return new Testing();
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDataTesting = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnImport = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnClean = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Data Testing");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/colors_cmyk.png"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(189, 172, 172));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray));

        tblDataTesting.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Siswa", "Nilai UAS"
            }
        ));
        tblDataTesting.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblDataTesting.setRowHeight(20);
        jScrollPane1.setViewportView(tblDataTesting);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                .addContainerGap())
        );

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.add(jSeparator1);

        btnImport.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        btnImport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/import.png"))); // NOI18N
        btnImport.setText("Csv Import");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });
        jToolBar1.add(btnImport);
        jToolBar1.add(jSeparator2);

        btnClean.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        btnClean.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/eraser_1.png"))); // NOI18N
        btnClean.setText("Clean Table");
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });
        jToolBar1.add(btnClean);

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Data Testing");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:

    }//GEN-LAST:event_formInternalFrameClosing

    private void changeTitle() {
        String titleBar = Main.getMainFrame().dataTestingPanel.getTitle();
        Main.getMainFrame().dataTestingPanel.setTitle(mFile.getName() + " - " + titleBar);
        Main.getMainFrame().testingPanel.getLoadButton().setEnabled(true);
    }

    private JFileChooser fileChooser;
    private File mFile;
    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        mFile = new File("");
        if (fileChooser == null) {
            fileChooser = new JFileChooser();
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fileChooser.setFileFilter(
                    new FileNameExtensionFilter("csv", "csv")
            );
        }
        int ret = fileChooser.showOpenDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
            mFile = fileChooser.getSelectedFile();
            try {
                CSVTestingReader reader = new CSVTestingReader(mFile);
                List<Testing> listTestings = reader.readFile();
                for (Testing t : listTestings) {
                    Main.getTestingDataRepository().saveOrUpdate(t);
                }
                Main.getTestingDataRepository().setData(listTestings);
                loadDataToTable();
                btnImport.setEnabled(false);
                btnClean.setEnabled(true);
                changeTitle();
            } catch (FileNotFoundException e) {
                LOGGER.debug(e.getMessage());
                JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } catch (IllegalArgumentException e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(DataTestingPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnImportActionPerformed

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        int resp = JOptionPane.showConfirmDialog(this, "Anda yakin akan menghapus semua data ?","Konfirmasi",JOptionPane.YES_NO_OPTION);
        if (resp == JOptionPane.YES_OPTION) {
            try {
                Main.getTestingDataRepository().deleteAll();
                mFile = new File("");
                listTestings = new ArrayList<>();
                Main.getTestingDataRepository().setData(listTestings);
                Main.getMainFrame().dataTestingPanel.setTitle("List Data Testing");
                loadDataToTable();
                btnImport.setEnabled(true);
                //btnClean.setEnabled(false);
                //Main.getMainFrame().testingPanel.getLoadButton().setEnabled(false);
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(DataTestingPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnCleanActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        listTestings = new ArrayList<>();
        Main.getTestingDataRepository().setData(listTestings);
        Main.getMainFrame().dataTestingPanel = null;
    }//GEN-LAST:event_formInternalFrameClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnImport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tblDataTesting;
    // End of variables declaration//GEN-END:variables
}
